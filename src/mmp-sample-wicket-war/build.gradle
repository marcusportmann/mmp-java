group 'guru.mmp'

version '2.0.0'

apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'

sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  compile project(':mmp-application-wicket')
  compile project(':mmp-application-scheduler-wicket')
  compile project(':mmp-application-messaging-wicket')
  compile project(':mmp-application-process-wicket')
  compile project(':mmp-application-reporting-wicket')
  compile project(':mmp-application-sms')
  
  providedCompile 'javax:javaee-api:7.0'

  testCompile project(':mmp-application-test')
}

/*
 * NOTE: We need to copy the META-INF/beans.xml from the "main" resources to the 
 *       classes output folder for Weld to successfully resolve the classes. This
 *       is because Weld only resolves classes in the same classpath location as
 *       the beans.xml file.
 */
sourceSets.main.resources {
  exclude 'META-INF/beans.xml'
  classes {
    inputs.dir 'src/main/resources/META-INF/beans.xml'
    outputs.dir "$buildDir/classes/main/META-INF/beans.xml"
  } << {
    copy {
      from('src/main/resources') { include 'META-INF/beans.xml' }
      into "$buildDir/classes/main/"
    }
  }
}

/*
 * NOTE: We need to copy the META-INF/beans.xml from the "test" resources to the 
 *       classes output folder for Weld to successfully resolve the classes. This 
 *       is because Weld only resolves classes in the same classpath location as 
 *       the beans.xml file.
 */
sourceSets.test.resources {
  exclude 'META-INF/beans.xml'
  classes {
    inputs.dir 'src/test/resources/META-INF/beans.xml'
    outputs.dir "$buildDir/classes/test/META-INF/beans.xml"
  } << {
    copy {
      from('src/test/resources') { include 'META-INF/beans.xml' }
      into "$buildDir/classes/test/"
    }
  }  
} 

wsdl2java {
  sourceDir = "${projectDir}/src/main/java"
  bindingFiles.add("${projectDir}/src/main/resources/META-INF/wsdl/mmp-bindings.xjb")
  wsdlFiles.add("${projectDir}/src/main/resources/META-INF/wsdl/SampleService.wsdl")
}