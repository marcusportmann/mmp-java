
println '- Building mmp-java...'

subprojects
{
  repositories {
    mavenCentral()
  }
}

// ---------------------------------------------------------------------------------------
// Add the wsdl2java task to all the required subprojects
// ---------------------------------------------------------------------------------------
subprojects.findAll { it.name in ['mmp-application'] }. each { p ->
 configure(p) {
   task wsdl2java(type: WSDL2JavaTask)
  }
}

// ---------------------------------------------------------------------------------------
// The WSDL2JavaTask generates the JAX-WS portable artifacts from WSDL files.
// ---------------------------------------------------------------------------------------
class WSDL2JavaTask extends DefaultTask {

  List<String> bindingFiles = new ArrayList<String>()
  
  boolean keepGeneratedFiles = true

  String sourceDir
  
  String targetVersion  = "2.2"

  List<String> wsdlFiles = new ArrayList<String>()

  @TaskAction
  def wsdl2java() {
    println "- Generating the JAX-WS portable artifacts for the project \"${project.name}\" using ${wsdlFiles.size} WSDL file(s)..."

    if ((sourceDir == null) || (sourceDir.length() == 0)) {
      throw new GradleException('No source directory specified for the WSDL2JavaTask task')
    }

    List<String> parameters = new ArrayList<String>()
    
    parameters.add('wsimport')

    for (String bindingFile : bindingFiles) {
      parameters.add('-b')
      parameters.add("${bindingFile}")
    }
    
    parameters.add('-cp')
    parameters.add('../mmp-common/build/classes/main/')
    
    if (keepGeneratedFiles) {
      parameters.add('-keep')
    }

    parameters.add('-s')
    parameters.add("${sourceDir}")
    
    parameters.add('-target')
    parameters.add("${targetVersion}")
    
    parameters.add('-Xnocompile')
    
    for (String wsdlFile : wsdlFiles) {

      println "  - Processing the WSDL file \"${wsdlFile}\""
  
      List<String> wsdlParameters = new ArrayList<String>(parameters)
      
      wsdlParameters.add(wsdlFile)
      
      String[] execParameters = wsdlParameters.toArray()
      
      execParameters[execParameters.length - 1] = wsdlFile
      
      Process process = Runtime.getRuntime().exec(execParameters)    

      java.io.BufferedReader input = new java.io.BufferedReader(new java.io.InputStreamReader(process.getInputStream()))
    
      String line
    
      while ((line = input.readLine()) != null) {
        println line
      }
      
      input.close();    
    }    
  }
}  


