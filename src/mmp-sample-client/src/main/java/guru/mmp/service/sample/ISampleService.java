package guru.mmp.service.sample;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2017-10-01T13:52:19.625+02:00
 * Generated source version: 3.1.12
 * 
 */
@WebService(targetNamespace = "http://sample.service.mmp.guru", name = "ISampleService")
@XmlSeeAlso({guru.mmp.model.application.ObjectFactory.class, ObjectFactory.class})
public interface ISampleService {

    @WebMethod(operationName = "GetAllData")
    @RequestWrapper(localName = "GetAllData", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetAllData")
    @ResponseWrapper(localName = "GetAllDataResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetAllDataResponse")
    @WebResult(name = "Data", targetNamespace = "")
    public java.util.List<guru.mmp.service.sample.Data> getAllData() throws SampleServiceException;

    @WebMethod(operationName = "TestZonedDateTime")
    @RequestWrapper(localName = "TestZonedDateTime", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.TestZonedDateTime")
    @ResponseWrapper(localName = "TestZonedDateTimeResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.TestZonedDateTimeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public guru.mmp.service.sample.ZonedDateTime testZonedDateTime(
        @WebParam(name = "ZonedDateTime", targetNamespace = "")
        java.lang.String zonedDateTime
    ) throws SampleServiceException;

    @WebMethod(operationName = "TestExceptionHandling")
    @RequestWrapper(localName = "TestExceptionHandling", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.TestExceptionHandling")
    @ResponseWrapper(localName = "TestExceptionHandlingResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.TestExceptionHandlingResponse")
    public void testExceptionHandling() throws SampleServiceException;

    @WebMethod(operationName = "TestLocalDateTime")
    @RequestWrapper(localName = "TestLocalDateTime", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.TestLocalDateTime")
    @ResponseWrapper(localName = "TestLocalDateTimeResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.TestLocalDateTimeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public guru.mmp.service.sample.LocalDateTime testLocalDateTime(
        @WebParam(name = "LocalDateTime", targetNamespace = "")
        java.lang.String localDateTime
    ) throws SampleServiceException;

    @WebMethod(operationName = "Validate")
    @RequestWrapper(localName = "Validate", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.Validate")
    @ResponseWrapper(localName = "ValidateResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.ValidateResponse")
    @WebResult(name = "ValidationError", targetNamespace = "")
    public java.util.List<guru.mmp.model.application.ValidationError> validate(
        @WebParam(name = "Data", targetNamespace = "")
        guru.mmp.service.sample.Data data
    ) throws SampleServiceException;

    @WebMethod(operationName = "GetData")
    @RequestWrapper(localName = "GetData", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetData")
    @ResponseWrapper(localName = "GetDataResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetDataResponse")
    @WebResult(name = "Data", targetNamespace = "")
    public guru.mmp.service.sample.Data getData() throws SampleServiceException;

    @WebMethod(operationName = "GetVersion")
    @RequestWrapper(localName = "GetVersion", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetVersion")
    @ResponseWrapper(localName = "GetVersionResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetVersionResponse")
    @WebResult(name = "Version", targetNamespace = "")
    public java.lang.String getVersion();
}
