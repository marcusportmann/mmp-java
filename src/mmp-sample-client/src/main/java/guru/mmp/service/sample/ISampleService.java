
package guru.mmp.service.sample;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import guru.mmp.model.application.ValidationError;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ISampleService", targetNamespace = "http://sample.service.mmp.guru")
@XmlSeeAlso({
    guru.mmp.model.application.ObjectFactory.class,
    guru.mmp.service.sample.ObjectFactory.class
})
public interface ISampleService {


    /**
     * 
     * @return
     *     returns java.util.List<guru.mmp.service.sample.Data>
     * @throws SampleServiceException
     */
    @WebMethod(operationName = "GetAllData")
    @WebResult(name = "Data", targetNamespace = "")
    @RequestWrapper(localName = "GetAllData", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetAllData")
    @ResponseWrapper(localName = "GetAllDataResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetAllDataResponse")
    public List<Data> getAllData()
        throws SampleServiceException
    ;

    /**
     * 
     * @param data
     * @return
     *     returns java.util.List<guru.mmp.model.application.ValidationError>
     * @throws SampleServiceException
     */
    @WebMethod(operationName = "Validate")
    @WebResult(name = "ValidationError", targetNamespace = "")
    @RequestWrapper(localName = "Validate", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.Validate")
    @ResponseWrapper(localName = "ValidateResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.ValidateResponse")
    public List<ValidationError> validate(
        @WebParam(name = "Data", targetNamespace = "")
        Data data)
        throws SampleServiceException
    ;

    /**
     * 
     * @return
     *     returns guru.mmp.service.sample.Data
     * @throws SampleServiceException
     */
    @WebMethod(operationName = "GetData")
    @WebResult(name = "Data", targetNamespace = "")
    @RequestWrapper(localName = "GetData", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetData")
    @ResponseWrapper(localName = "GetDataResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetDataResponse")
    public Data getData()
        throws SampleServiceException
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetVersion")
    @WebResult(name = "Version", targetNamespace = "")
    @RequestWrapper(localName = "GetVersion", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetVersion")
    @ResponseWrapper(localName = "GetVersionResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.GetVersionResponse")
    public String getVersion();

    /**
     * 
     * @throws SampleServiceException
     */
    @WebMethod(operationName = "TestExceptionHandling")
    @RequestWrapper(localName = "TestExceptionHandling", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.TestExceptionHandling")
    @ResponseWrapper(localName = "TestExceptionHandlingResponse", targetNamespace = "http://sample.service.mmp.guru", className = "guru.mmp.service.sample.TestExceptionHandlingResponse")
    public void testExceptionHandling()
        throws SampleServiceException
    ;

}
